# ===============================
# DATABASE CONFIGURATION
# ===============================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/bulk_dispute_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:bulkuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:bulkpwd}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# DATABASE CONNECTION POOLING (HikariCP)
# ===============================
# Production-ready connection pool configuration
spring.datasource.hikari.maximum-pool-size=${DB_MAX_CONNECTIONS:20}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1800000}
spring.datasource.hikari.leak-detection-threshold=${DB_LEAK_DETECTION:60000}

# Connection validation and health checks
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=${DB_VALIDATION_TIMEOUT:5000}

# Performance optimizations
spring.datasource.hikari.cache-prep-stmts=true
spring.datasource.hikari.prep-stmt-cache-size=250
spring.datasource.hikari.prep-stmt-cache-sql-limit=2048

# Connection pool monitoring
spring.datasource.hikari.register-mbeans=true


# ===============================
# LOGGING
# ===============================
logging.level.root=INFO
logging.level.org.springframework.jdbc.core=DEBUG
logging.file.name=logs/bulk_dispute_processor.log

# ===============================
# SPRING BATCH CONFIGURATION
# ===============================
spring.batch.jdbc.initialize-schema=never

# ===============================
# RABBITMQ CONFIGURATION
# ===============================
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:admin}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:admin123}

# ===============================
# SPRING BOOT MULTIPART CONFIGURATION
# ===============================
# File upload configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:100MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:200MB}
spring.servlet.multipart.file-size-threshold=${FILE_SIZE_THRESHOLD:2MB}
spring.servlet.multipart.location=${TEMP_UPLOAD_LOCATION:${java.io.tmpdir}}

# ===============================
# BULK DISPUTE CONFIGURATION
# ===============================
# File storage configuration
bulk.files.base-path=${BULK_FILES_BASE_PATH:C:/Users/USER/Downloads/sparkpay.bulk_dispute_processor/sparkpay.bulk_dispute_processor/uploads}

# Proof files storage configuration
bulk.proofs.base-path=${BULK_PROOFS_BASE_PATH:C:/Users/USER/Downloads/sparkpay.bulk_dispute_processor/sparkpay.bulk_dispute_processor/proofs}
bulk.proofs.max-size-mb=${BULK_PROOFS_MAX_SIZE_MB:10}
bulk.proofs.allowed-extensions=${BULK_PROOFS_ALLOWED_EXTENSIONS:pdf,jpg,jpeg,png,doc,docx}
bulk.proofs.replace-existing=${BULK_PROOFS_REPLACE_EXISTING:true}

# Validation configuration
bulk.validation.max-preview-rows=${MAX_PREVIEW_ROWS:200}
bulk.validation.max-upload-size-mb=${MAX_UPLOAD_SIZE_MB:50}
bulk.validation.session-ttl-days=${SESSION_TTL_DAYS:7}

# Required columns for CSV validation
bulk.validation.required-columns=${REQUIRED_COLUMNS:dispute_id,action}
bulk.validation.expected-columns=${EXPECTED_COLUMNS:dispute_id,action,reason,notes}

# Server configuration
server.port=8445
spring.application.name=sparkpay.bulk_dispute_processor

# ===============================
# OPENAPI/SWAGGER CONFIGURATION
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# ReDoc configuration for better OpenAPI documentation
springdoc.swagger-ui.config-url=/api-docs/swagger-config
springdoc.swagger-ui.url=/api-docs
springdoc.swagger-ui.validator-url=

# ===============================
# AUTOMATIC RETRY CONFIGURATION
# ===============================
# Retry configuration for failed jobs
bulk.retry.enabled=${BULK_RETRY_ENABLED:true}
bulk.retry.max-attempts=${BULK_RETRY_MAX_ATTEMPTS:3}
bulk.retry.initial-delay-ms=${BULK_RETRY_INITIAL_DELAY_MS:30000}
bulk.retry.max-delay-ms=${BULK_RETRY_MAX_DELAY_MS:300000}
bulk.retry.multiplier=${BULK_RETRY_MULTIPLIER:2.0}
bulk.retry.schedule-interval-ms=${BULK_RETRY_SCHEDULE_INTERVAL_MS:60000}

# Resume configuration for paused jobs
bulk.resume.enabled=${BULK_RESUME_ENABLED:true}
bulk.resume.schedule-interval-ms=${BULK_RESUME_SCHEDULE_INTERVAL_MS:30000}

# ===============================
# CORS CONFIGURATION
# ===============================
# Development: Allow all origins
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:false}
cors.max-age=${CORS_MAX_AGE:3600}

# Production example (uncomment and modify as needed):
# cors.allowed-origins=https://yourdomain.com,https://app.yourdomain.com
# cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# cors.allowed-headers=Content-Type,Authorization,X-Requested-With,Accept,Origin
# cors.allow-credentials=true
# cors.max-age=3600
